EVAL ::= [TARGET] USING

TARGET ::= * | ADDR | ADDR , ADDR
ADDR ::= NN.NN

N = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

USING ::= using FUNC as SETNAME in USING
        | PREDICATE

PREDICATE ::= @(VAR : SET ~ PREDICATE)			FORALL
            | #(VAR : SET ~ PREDICATE)			EXISTS
			| PREDICATE POP PREDICATE
			| ! PREDICATE
			| VAREXPR VPOP VAREXPR
			
VPOP ::= == | < | <= | > | >= | !=
POP  ::= | | &


SET ::= SETNAME
      | { VAR : SET ~ VAREXPR }

VAREXPR ::= VAR
          | NAME(VAR)
          | NAME(this)
          | VAR VOP VAR
          | NUMBER
          | SETFN(SET)
          | count(VAR : SET ~ PREDICATE)
          | abs(VAREXPR)

SETFN ::= sum | mean | mode | median | max | min | product

VOP ::= + | - | * | /

FUNC ::= FNNAME(ARGS)
ARGS ::=
       | ARG
       | ARGS, ARGS

NUMBER ::= 0 | [1-9][0-9]*



===================
Examples
===================

===================
Check that no two hop neighbours have the same slot
===================
using Neighbours(this, 2) as 2hopn in
	@(x : 2hopn ~
		slot(x) != slot(this)
	)
===================

===================
Check that no two hop neighbours have the same slot
===================
using Neighbours(this, 1) as 1hopn in
	@(x : 1hopn ~
		@(y : 1hopn ~
			slot(x) != slot(y) & addr(x) != addr(y)
		)
	)
===================

===================
Check that our temperature is less than or equal to 40 degrees
===================
temperature(this) <= 40.0
===================

===================
Check that the average neighbour temperature is with 10 degrees of ours
===================
using Neighbours(this, 2) as 2hopn in
	abs(temperature(this) - mean({x : 2hopn ~ temperature(x)})) <= 10.0
===================

===================
Check cluster head is in H-hop neighbourhood
===================
using Neighbours(this, H(this)) as neighbours in
	#(node : neighbours ~
		ch(this) == addr(node)
	)
===================

===================
Check 1-hop neighbourhood is in 2-hop neighbourhood
===================
using Neighbours(this, 1) as 1hopn in
	using Neighbours(this, 2) as 2hopn in
		!(a : 1hopn ~
			#(b : 2hopn ~ addr(a) == addr(b)
		)
===================




