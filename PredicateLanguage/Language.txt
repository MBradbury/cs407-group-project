EVAL ::= [TARGET] PREDICATE

TARGET ::= * | ADDR | ADDR , ADDR
ADDR ::= NN.NN

N = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

PREDICATE ::= using FUNC as SET in PREDICATE
            | @(VAR : SET ~ PREDICATE)			FORALL
            | #(VAR : SET ~ PREDICATE)			EXISTS
			| PREDICATE POP PREDICATE
			| ! PREDICATE
			| VAREXPR VPOP VAREXPR
			
VPOP ::= = | < | <= | > | >= | !=
POP  ::= | | &


VAREXPR ::= VAR
          | NAME(VAR)
          | NAME(this)
          | VAR VOP VAR
          | NUMBER
          | SETFN(SET)

SETFN ::= sum | mean | mode | median | max | min | product

VOP ::= + | - | * | /

FUNC ::= FNNAME(ARGS)
ARGS ::=
       | ARG
       | ARGS, ARGS

NUMBER ::= 0 | [1-9][0-9]*

